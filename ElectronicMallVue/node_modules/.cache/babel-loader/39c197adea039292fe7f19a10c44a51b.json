{"ast":null,"code":"import _asyncToGenerator from \"D:/Workspace/graduation_project/ElectronicMall/ElectronicMallVue/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport \"core-js/modules/es.number.to-fixed.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: \"PaymentPage\",\n  data: function data() {\n    return {\n      orderNo: '',\n      money: 0\n    };\n  },\n  created: function created() {\n    this.initPaymentData();\n  },\n  methods: {\n    initPaymentData: function initPaymentData() {\n      var _this$$route$query = this.$route.query,\n          money = _this$$route$query.money,\n          orderNo = _this$$route$query.orderNo;\n      this.orderNo = orderNo || '';\n      this.money = parseFloat(money || 0).toFixed(2);\n    },\n    alipay: function alipay() {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var _yield$_this$request$, code, formHtml, div;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n\n                if (localStorage.getItem('token')) {\n                  _context.next = 4;\n                  break;\n                }\n\n                _this.$message.error('请先登录');\n\n                return _context.abrupt(\"return\", _this.$router.push('/login'));\n\n              case 4:\n                _context.next = 6;\n                return _this.request.post('/alipay/pay', {\n                  orderId: _this.orderNo\n                });\n\n              case 6:\n                _yield$_this$request$ = _context.sent;\n                code = _yield$_this$request$.code;\n                formHtml = _yield$_this$request$.data;\n\n                if (code === 200) {\n                  // 创建临时容器\n                  div = document.createElement('div');\n                  div.innerHTML = formHtml; // 自动提交表单\n\n                  setTimeout(function () {\n                    document.body.appendChild(div);\n                    var form = div.querySelector('form');\n                    if (form) form.submit();\n                  }, 100);\n                }\n\n                _context.next = 16;\n                break;\n\n              case 12:\n                _context.prev = 12;\n                _context.t0 = _context[\"catch\"](0);\n                console.error('支付宝支付失败:', _context.t0);\n\n                _this.$message.error(_context.t0.msg || '支付请求失败');\n\n              case 16:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 12]]);\n      }))();\n    },\n    handleAlipay: function handleAlipay() {\n      var _this2 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var timestamp, paymentUrl;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                timestamp = new Date().getTime();\n                paymentUrl = \"http://localhost:9191/alipay/pay?id=\".concat(_this2.orderNo, \"&_t=\").concat(timestamp);\n                window.open(paymentUrl, '_blank');\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }))();\n    },\n    handleWechatPay: function handleWechatPay() {\n      var _this3 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n        var _yield$_this3$request, code, msg;\n\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                _context3.next = 3;\n                return _this3.request.get(\"/api/order/paid/\".concat(_this3.orderNo));\n\n              case 3:\n                _yield$_this3$request = _context3.sent;\n                code = _yield$_this3$request.code;\n                msg = _yield$_this3$request.msg;\n\n                if (code === 200) {\n                  _this3.$message.success(\"\\u652F\\u4ED8\\u6210\\u529F \\xA5\".concat(_this3.money));\n\n                  _this3.$router.replace(\"/orderlist\");\n                } else {\n                  _this3.$message.error(msg || '支付失败，请重试');\n                }\n\n                _context3.next = 13;\n                break;\n\n              case 9:\n                _context3.prev = 9;\n                _context3.t0 = _context3[\"catch\"](0);\n                console.error('支付请求失败:', _context3.t0);\n\n                _this3.$message.error('支付请求失败，请检查网络');\n\n              case 13:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[0, 9]]);\n      }))();\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA;AACAA,qBADA;AAEAC,MAFA,kBAEA;AACA;AACAC,iBADA;AAEAC;AAFA;AAIA,GAPA;AAQAC,SARA,qBAQA;AACA;AACA,GAVA;AAWAC;AACAC,mBADA,6BACA;AACA;AAAA;AAAA;AACA;AACA;AACA,KALA;AAMAC,UANA,oBAMA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,oBAGAC,6BAHA;AAAA;AAAA;AAAA;;AAIA;;AAJA,iDAKA,4BALA;;AAAA;AAAA;AAAA,uBASA;AACAC;AADA,kBATA;;AAAA;AAAA;AASAC,oBATA,yBASAA,IATA;AASAC,wBATA,yBASAV,IATA;;AAaA;AACA;AACAW,qBAFA,GAEAC,6BAFA;AAGAD,2CAHA,CAKA;;AACAE;AACAD;AACA;AACA;AACA,mBAJA,EAIA,GAJA;AAKA;;AAxBA;AAAA;;AAAA;AAAA;AAAA;AA0BAE;;AACA;;AA3BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA6BA,KAnCA;AAqCAC,gBArCA,0BAqCA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACAC,yBADA,GACA,oBADA;AAEAC,0BAFA,iDAEA,cAFA,iBAEAD,SAFA;AAGAE;;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA,KAzCA;AA2CAC,mBA3CA,6BA2CA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEA,6DAFA;;AAAA;AAAA;AAEAV,oBAFA,yBAEAA,IAFA;AAEAW,mBAFA,yBAEAA,GAFA;;AAIA;AACA;;AACA;AACA,iBAHA,MAGA;AACA;AACA;;AATA;AAAA;;AAAA;AAAA;AAAA;AAWAN;;AACA;;AAZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;AAzDA;AAXA","names":["name","data","orderNo","money","created","methods","initPaymentData","alipay","localStorage","orderId","code","formHtml","div","document","setTimeout","console","handleAlipay","timestamp","paymentUrl","window","handleWechatPay","msg"],"sourceRoot":"src/views/front/order","sources":["Pay.vue"],"sourcesContent":["<template>\r\n  <div class=\"payment-container\">\r\n    <table class=\"order-info\">\r\n      <tr>\r\n        <th>订单号</th>\r\n        <td>{{ orderNo }}</td>\r\n      </tr>\r\n      <tr>\r\n        <th>金额</th>\r\n        <td>{{ money }} 元</td>\r\n      </tr>\r\n    </table>\r\n    <hr class=\"divider\">\r\n    <div class=\"payment-methods\">\r\n      <h3>支付方式：</h3>\r\n      <div class=\"payment-icons\">\r\n        <img \r\n          src=\"../../../resource/img/微信支付.png\" \r\n          alt=\"微信支付\"\r\n          class=\"payment-icon\"\r\n          @click=\"handleWechatPay\"\r\n        >\r\n        <img \r\n          src=\"../../../resource/img/支付宝.png\" \r\n          alt=\"支付宝\"\r\n          class=\"payment-icon\"\r\n          @click=\"alipay\"\r\n        >\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"PaymentPage\",\r\n  data() {\r\n    return {\r\n      orderNo: '',\r\n      money: 0\r\n    }\r\n  },\r\n  created() {\r\n    this.initPaymentData()\r\n  },\r\n  methods: {\r\n    initPaymentData() {\r\n      const { money, orderNo } = this.$route.query\r\n      this.orderNo = orderNo || ''\r\n      this.money = parseFloat(money || 0).toFixed(2)\r\n    },\r\n    async alipay() {\r\n  try {\r\n    // 先检查本地是否存在token\r\n    if (!localStorage.getItem('token')) {\r\n      this.$message.error('请先登录')\r\n      return this.$router.push('/login')\r\n    }\r\n\r\n    // 使用封装后的请求方法\r\n    const { code, data: formHtml } = await this.request.post('/alipay/pay', {\r\n      orderId: this.orderNo\r\n    })\r\n\r\n    if (code === 200) {\r\n      // 创建临时容器\r\n      const div = document.createElement('div')\r\n      div.innerHTML = formHtml\r\n      \r\n      // 自动提交表单\r\n      setTimeout(() => {\r\n        document.body.appendChild(div)\r\n        const form = div.querySelector('form')\r\n        if (form) form.submit()\r\n      }, 100)\r\n    }\r\n  } catch (error) {\r\n    console.error('支付宝支付失败:', error)\r\n    this.$message.error(error.msg || '支付请求失败')\r\n  }\r\n},\r\n\r\n    async handleAlipay() {\r\n      const timestamp = new Date().getTime();\r\n      const paymentUrl = `http://localhost:9191/alipay/pay?id=${this.orderNo}&_t=${timestamp}`\r\n      window.open(paymentUrl, '_blank')     \r\n    },\r\n\r\n    async handleWechatPay() {\r\n      try {\r\n        const { code, msg } = await this.request.get(`/api/order/paid/${this.orderNo}`)\r\n        \r\n        if (code === 200) {\r\n          this.$message.success(`支付成功 ¥${this.money}`)\r\n          this.$router.replace(\"/orderlist\")\r\n        } else {\r\n          this.$message.error(msg || '支付失败，请重试')\r\n        }\r\n      } catch (error) {\r\n        console.error('支付请求失败:', error)\r\n        this.$message.error('支付请求失败，请检查网络')\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.payment-container {\r\n  width: 50%;\r\n  margin: 20px auto;\r\n  padding: 20px;\r\n  background-color: white;\r\n  text-align: center;\r\n  box-shadow: 0 2px 12px rgba(0,0,0,0.1);\r\n  border-radius: 8px;\r\n}\r\n\r\n.order-info {\r\n  margin: 20px auto;\r\n  border-collapse: collapse;\r\n}\r\n\r\n.order-info th,\r\n.order-info td {\r\n  padding: 12px 24px;\r\n  border-bottom: 1px solid #eee;\r\n}\r\n\r\n.order-info th {\r\n  font-weight: 600;\r\n  color: #666;\r\n}\r\n\r\n.divider {\r\n  width: 80%;\r\n  margin: 20px auto;\r\n  border: 0;\r\n  border-top: 1px solid #eee;\r\n}\r\n\r\n.payment-methods {\r\n  margin-top: 24px;\r\n}\r\n\r\n.payment-icons {\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 60px;\r\n  margin-top: 16px;\r\n}\r\n\r\n.payment-icon {\r\n  width: 50px;\r\n  height: 50px;\r\n  cursor: pointer;\r\n  transition: transform 0.2s;\r\n}\r\n\r\n.payment-icon:hover {\r\n  transform: scale(1.1);\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}