{"ast":null,"code":"import _asyncToGenerator from \"D:/Workspace/graduation_project/ElectronicMall/ElectronicMallVue/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.number.to-fixed.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: \"PaymentPage\",\n  data: function data() {\n    return {\n      orderNo: '',\n      money: 0,\n      userId: null,\n      loading: true,\n      orderExist: false\n    };\n  },\n  created: function created() {\n    this.initPaymentData();\n  },\n  methods: {\n    initPaymentData: function initPaymentData() {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var userIdRes, orderRes, currentOrder;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return _this.request.get(\"/userid\");\n\n              case 3:\n                userIdRes = _context.sent;\n                _this.userId = userIdRes.data; // 获取用户订单\n\n                _context.next = 7;\n                return _this.request.get(\"/api/order/userid/\".concat(_this.userId));\n\n              case 7:\n                orderRes = _context.sent;\n\n                if (orderRes.code === 200) {\n                  currentOrder = orderRes.data.find(function (o) {\n                    return o.orderNo === _this.$route.query.orderNo;\n                  });\n\n                  if (currentOrder) {\n                    _this.orderNo = currentOrder.orderNo;\n                    _this.money = parseFloat(currentOrder.totalPrice).toFixed(2);\n                    _this.orderExist = true;\n                  } else {\n                    _this.$message.error('订单不存在');\n                  }\n                }\n\n                _context.next = 16;\n                break;\n\n              case 11:\n                _context.prev = 11;\n                _context.t0 = _context[\"catch\"](0);\n                console.error('初始化失败:', _context.t0);\n\n                _this.$message.error(_context.t0.msg || '数据加载失败');\n\n                _this.$router.replace('/');\n\n              case 16:\n                _context.prev = 16;\n                _this.loading = false;\n                return _context.finish(16);\n\n              case 19:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 11, 16, 19]]);\n      }))();\n    },\n    handleAlipay: function handleAlipay() {\n      var _this2 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var response, div, _error$response;\n\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _this2.loading = true;\n                _context2.next = 4;\n                return _this2.request.get(\"/alipay/pay?id=\".concat(_this2.orderNo), {\n                  responseType: 'text',\n                  headers: {\n                    'Cache-Control': 'no-cache' // 防止缓存问题\n\n                  }\n                });\n\n              case 4:\n                response = _context2.sent;\n                // 动态提交支付宝表单\n                div = document.createElement('div');\n                div.innerHTML = response;\n                document.body.appendChild(div);\n                setTimeout(function () {\n                  var form = div.querySelector('form');\n\n                  if (form) {\n                    form.style.display = 'none';\n                    form.submit();\n                  } else {\n                    _this2.$message.error('支付表单生成失败');\n                  }\n                }, 100);\n                _context2.next = 16;\n                break;\n\n              case 11:\n                _context2.prev = 11;\n                _context2.t0 = _context2[\"catch\"](0);\n                console.error('支付宝支付失败:', _context2.t0);\n\n                _this2.$message.error(_context2.t0.msg || '支付请求失败');\n\n                if (((_error$response = _context2.t0.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n                  _this2.$router.push('/login');\n                }\n\n              case 16:\n                _context2.prev = 16;\n                _this2.loading = false;\n                return _context2.finish(16);\n\n              case 19:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[0, 11, 16, 19]]);\n      }))();\n    },\n    handleWechatPay: function handleWechatPay() {\n      var _this3 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n        var _yield$_this3$request, code, msg;\n\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                _this3.loading = true;\n                _context3.next = 4;\n                return _this3.request.get(\"/api/order/paid/\".concat(_this3.orderNo));\n\n              case 4:\n                _yield$_this3$request = _context3.sent;\n                code = _yield$_this3$request.code;\n                msg = _yield$_this3$request.msg;\n\n                if (code === 200) {\n                  _this3.$message.success(\"\\u652F\\u4ED8\\u6210\\u529F \\xA5\".concat(_this3.money));\n\n                  _this3.$router.replace(\"/orderlist\");\n                } else {\n                  _this3.$message.error(msg || '支付失败，请重试');\n                }\n\n                _context3.next = 14;\n                break;\n\n              case 10:\n                _context3.prev = 10;\n                _context3.t0 = _context3[\"catch\"](0);\n                console.error('微信支付失败:', _context3.t0);\n\n                _this3.$message.error(_context3.t0.msg || '支付请求失败');\n\n              case 14:\n                _context3.prev = 14;\n                _this3.loading = false;\n                return _context3.finish(14);\n\n              case 17:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[0, 10, 14, 17]]);\n      }))();\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4CA;AACAA,qBADA;AAEAC,MAFA,kBAEA;AACA;AACAC,iBADA;AAEAC,cAFA;AAGAC,kBAHA;AAIAC,mBAJA;AAKAC;AALA;AAOA,GAVA;AAWAC,SAXA,qBAWA;AACA;AACA,GAbA;AAcAC;AACAC,mBADA,6BACA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAGA,4BAHA;;AAAA;AAGAC,yBAHA;AAIA,8CAJA,CAMA;;AANA;AAAA,uBAOA,4DAPA;;AAAA;AAOAC,wBAPA;;AASA;AACAC,8BADA,GACAD,mBACA;AAAA;AAAA,mBADA,CADA;;AAKA;AACA;AACA;AACA;AACA,mBAJA,MAIA;AACA;AACA;AACA;;AArBA;AAAA;;AAAA;AAAA;AAAA;AAuBAE;;AACA;;AACA;;AAzBA;AAAA;AA2BA;AA3BA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA6BA,KA9BA;AAgCAC,gBAhCA,0BAgCA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAFA;AAAA,uBAGA;AACAC,sCADA;AAEAC;AACA,+CADA,CACA;;AADA;AAFA,kBAHA;;AAAA;AAGAC,wBAHA;AAUA;AACAC,mBAXA,GAWAC,6BAXA;AAYAD;AACAC;AAEAC;AACA;;AACA;AACAC;AACAA;AACA,mBAHA,MAGA;AACA;AACA;AACA,iBARA,EAQA,GARA;AAfA;AAAA;;AAAA;AAAA;AAAA;AAyBAR;;AACA;;AACA;AACA;AACA;;AA7BA;AAAA;AA+BA;AA/BA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiCA,KAjEA;AAmEAS,mBAnEA,6BAmEA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAFA;AAAA,uBAGA,6DAHA;;AAAA;AAAA;AAGAC,oBAHA,yBAGAA,IAHA;AAGAC,mBAHA,yBAGAA,GAHA;;AAKA;AACA;;AACA;AACA,iBAHA,MAGA;AACA;AACA;;AAVA;AAAA;;AAAA;AAAA;AAAA;AAYAX;;AACA;;AAbA;AAAA;AAeA;AAfA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiBA;AApFA;AAdA","names":["name","data","orderNo","money","userId","loading","orderExist","created","methods","initPaymentData","userIdRes","orderRes","currentOrder","console","handleAlipay","responseType","headers","response","div","document","setTimeout","form","handleWechatPay","code","msg"],"sourceRoot":"src/views/front/order","sources":["Pay.vue"],"sourcesContent":["<template>\r\n  <div class=\"payment-container\">\r\n    <el-skeleton :loading=\"loading\" animated>\r\n      <template v-if=\"orderExist\">\r\n        <table class=\"order-info\">\r\n          <tr>\r\n            <th>订单号</th>\r\n            <td>{{ orderNo }}</td>\r\n          </tr>\r\n          <tr>\r\n            <th>金额</th>\r\n            <td>{{ money }} 元</td>\r\n          </tr>\r\n        </table>\r\n        <hr class=\"divider\">\r\n        <div class=\"payment-methods\">\r\n          <h3>支付方式：</h3>\r\n          <div class=\"payment-icons\">\r\n            <img \r\n              src=\"../../../resource/img/微信支付.png\" \r\n              alt=\"微信支付\"\r\n              class=\"payment-icon\"\r\n              @click=\"handleWechatPay\"\r\n            >\r\n            <img \r\n              src=\"../../../resource/img/支付宝.png\" \r\n              alt=\"支付宝\"\r\n              class=\"payment-icon\"\r\n              @click=\"handleAlipay\"\r\n            >\r\n          </div>\r\n        </div>\r\n      </template>\r\n      <div v-else class=\"error-message\">\r\n        <el-alert type=\"error\" :closable=\"false\">\r\n          <span>订单不存在或已失效</span>\r\n          <el-button type=\"text\" @click=\"$router.go(-1)\">返回上一页</el-button>\r\n        </el-alert>\r\n      </div>\r\n    </el-skeleton>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"PaymentPage\",\r\n  data() {\r\n    return {\r\n      orderNo: '',\r\n      money: 0,\r\n      userId: null,\r\n      loading: true,\r\n      orderExist: false\r\n    }\r\n  },\r\n  created() {\r\n    this.initPaymentData()\r\n  },\r\n  methods: {\r\n    async initPaymentData() {\r\n      try {\r\n        // 获取用户ID\r\n        const userIdRes = await this.request.get(\"/userid\")\r\n        this.userId = userIdRes.data\r\n\r\n        // 获取用户订单\r\n        const orderRes = await this.request.get(`/api/order/userid/${this.userId}`)\r\n        \r\n        if (orderRes.code === 200) {\r\n          const currentOrder = orderRes.data.find(\r\n            o => o.orderNo === this.$route.query.orderNo\r\n          )\r\n\r\n          if (currentOrder) {\r\n            this.orderNo = currentOrder.orderNo\r\n            this.money = parseFloat(currentOrder.totalPrice).toFixed(2)\r\n            this.orderExist = true\r\n          } else {\r\n            this.$message.error('订单不存在')\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error('初始化失败:', error)\r\n        this.$message.error(error.msg || '数据加载失败')\r\n        this.$router.replace('/')\r\n      } finally {\r\n        this.loading = false\r\n      }\r\n    },\r\n\r\n    async handleAlipay() {\r\n      try {\r\n        this.loading = true\r\n        const response = await this.request.get(`/alipay/pay?id=${this.orderNo}`, {\r\n          responseType: 'text',\r\n          headers: {\r\n            'Cache-Control': 'no-cache' // 防止缓存问题\r\n          }\r\n        })\r\n\r\n        // 动态提交支付宝表单\r\n        const div = document.createElement('div')\r\n        div.innerHTML = response\r\n        document.body.appendChild(div)\r\n        \r\n        setTimeout(() => {\r\n          const form = div.querySelector('form')\r\n          if (form) {\r\n            form.style.display = 'none'\r\n            form.submit()\r\n          } else {\r\n            this.$message.error('支付表单生成失败')\r\n          }\r\n        }, 100)\r\n      } catch (error) {\r\n        console.error('支付宝支付失败:', error)\r\n        this.$message.error(error.msg || '支付请求失败')\r\n        if (error.response?.status === 401) {\r\n          this.$router.push('/login')\r\n        }\r\n      } finally {\r\n        this.loading = false\r\n      }\r\n    },\r\n\r\n    async handleWechatPay() {\r\n      try {\r\n        this.loading = true\r\n        const { code, msg } = await this.request.get(`/api/order/paid/${this.orderNo}`)\r\n        \r\n        if (code === 200) {\r\n          this.$message.success(`支付成功 ¥${this.money}`)\r\n          this.$router.replace(\"/orderlist\")\r\n        } else {\r\n          this.$message.error(msg || '支付失败，请重试')\r\n        }\r\n      } catch (error) {\r\n        console.error('微信支付失败:', error)\r\n        this.$message.error(error.msg || '支付请求失败')\r\n      } finally {\r\n        this.loading = false\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.payment-container {\r\n  width: 50%;\r\n  margin: 20px auto;\r\n  padding: 20px;\r\n  background-color: white;\r\n  text-align: center;\r\n  box-shadow: 0 2px 12px rgba(0,0,0,0.1);\r\n  border-radius: 8px;\r\n}\r\n\r\n.order-info {\r\n  margin: 20px auto;\r\n  border-collapse: collapse;\r\n}\r\n\r\n.order-info th,\r\n.order-info td {\r\n  padding: 12px 24px;\r\n  border-bottom: 1px solid #eee;\r\n}\r\n\r\n.order-info th {\r\n  font-weight: 600;\r\n  color: #666;\r\n}\r\n\r\n.divider {\r\n  width: 80%;\r\n  margin: 20px auto;\r\n  border: 0;\r\n  border-top: 1px solid #eee;\r\n}\r\n\r\n.payment-methods {\r\n  margin-top: 24px;\r\n}\r\n\r\n.payment-icons {\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 60px;\r\n  margin-top: 16px;\r\n}\r\n\r\n.payment-icon {\r\n  width: 50px;\r\n  height: 50px;\r\n  cursor: pointer;\r\n  transition: transform 0.2s;\r\n}\r\n\r\n.payment-icon:hover {\r\n  transform: scale(1.1);\r\n}\r\n\r\n.error-message {\r\n  padding: 20px;\r\n  text-align: center;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}