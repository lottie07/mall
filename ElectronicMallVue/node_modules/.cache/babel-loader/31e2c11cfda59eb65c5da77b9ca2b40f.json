{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport API from \"@/utils/request\";\nimport axios from 'axios';\nexport default {\n  data: function data() {\n    return {\n      canvasWidth: 800,\n      canvasHeight: 600,\n      infoBoxVisible: false,\n      gridSize: 20,\n      blockX: 0,\n      blockY: 0,\n      allShops: [],\n      firstFloorShops: [],\n      secondFloorShops: [],\n      obstacles: [{\n        x: 3,\n        y: 4\n      }, {\n        x: 6,\n        y: 6\n      }],\n      treeImage: new Image()\n    };\n  },\n  created: function created() {\n    this.fetchShops(); // 组件创建时获取店铺数据\n  },\n  methods: {\n    fetchShops: function fetchShops() {\n      var _this = this;\n\n      this.request.get(\"/api/icon\").then(function (res) {\n        if (res.code === \"200\") {\n          _this.icons = res.data;\n        }\n      });\n      axios.get(\"/api/shops\").then(function (response) {\n        var res = response; // response.data 才是后端返回的主体数据\n\n        if (res.status === 200) {\n          _this.allShops = res.data; // 假设后端直接返回数据列表\n        }\n\n        console.log(res);\n      });\n    },\n    sortShopsByFloor: function sortShopsByFloor() {\n      var _this2 = this;\n\n      this.firstFloorShops = [];\n      this.secondFloorShops = [];\n      this.allShops.forEach(function (shop) {\n        if (shop.floor == 1) {\n          _this2.firstFloorShops.push(shop);\n        } else if (shop.floor == 2) {\n          _this2.secondFloorShops.push(shop);\n        }\n      });\n    }\n  },\n  mounted: function mounted() {\n    var canvas = document.getElementById('Floor1');\n    var ctx = canvas.getContext('2d');\n    var infoBox = document.getElementById('infoBox');\n    this.treeImage.src = require('./Resources/tree.png');\n\n    this.treeImage.onerror = function () {\n      console.error('树的图片加载失败');\n    };\n\n    var rows = this.canvasHeight / this.gridSize;\n    var cols = this.canvasWidth / this.gridSize;\n\n    var drawGrid = function drawGrid() {\n      ctx.strokeStyle = 'gray';\n      ctx.lineWidth = 1;\n    };\n\n    drawGrid();\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;AAmBA;AACA;AAEA;AACAA,MADA,kBACA;AACA;AACAC,sBADA;AAEAC,uBAFA;AAGAC,2BAHA;AAIAC,kBAJA;AAKAC,eALA;AAMAC,eANA;AAOAC,kBAPA;AAQAC,yBARA;AASAC,0BATA;AAUAC,kBACA;AAAAC;AAAAC;AAAA,OADA,EAEA;AAAAD;AAAAC;AAAA,OAFA,CAVA;AAcAC;AAdA;AAgBA,GAlBA;AAmBAC,SAnBA,qBAmBA;AACA,sBADA,CACA;AACA,GArBA;AAsBAC;AACAC,cADA,wBACA;AAAA;;AACA;AACA;AACA;AACA;AACA,OAJA;AAKAC;AACA,2BADA,CACA;;AACA;AACA,oCADA,CACA;AACA;;AACAC;AACA,OANA;AAOA,KAdA;AAeAC,oBAfA,8BAeA;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA,SAFA,MAEA;AACA;AACA;AACA,OANA;AAOA;AAzBA,GAtBA;AAiDAC,SAjDA,qBAiDA;AACA;AACA;AACA;AAEA;;AACA;AACAF;AACA,KAFA;;AAIA;AACA;;AAEA;AACAG;AACAA;AACA,KAHA;;AAKAC;AACA;AApEA","names":["data","canvasWidth","canvasHeight","infoBoxVisible","gridSize","blockX","blockY","allShops","firstFloorShops","secondFloorShops","obstacles","x","y","treeImage","created","methods","fetchShops","axios","console","sortShopsByFloor","mounted","ctx","drawGrid"],"sourceRoot":"src/views/front/mall","sources":["Tour.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div>\r\n      <canvas id=\"Floor1\" :width=\"canvasWidth\" :height=\"canvasHeight\"></canvas>\r\n      <div\r\n        id=\"infoBox\"\r\n        :style=\"{\r\n          position: 'absolute',\r\n          display: infoBoxVisible? 'block' : 'none',\r\n          backgroundColor: 'white',\r\n          border: '1px solid black',\r\n          padding: '5px'\r\n        }\"\r\n      ></div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport API from \"@/utils/request\";\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      canvasWidth: 800,\r\n      canvasHeight: 600,\r\n      infoBoxVisible: false,\r\n      gridSize: 20,\r\n      blockX: 0,\r\n      blockY: 0,\r\n      allShops: [], \r\n      firstFloorShops: [], \r\n      secondFloorShops: [], \r\n      obstacles: [\r\n        { x: 3, y: 4 },\r\n        { x: 6, y: 6 }\r\n      ],\r\n      treeImage: new Image()\r\n    };\r\n  },\r\n  created() {\r\n    this.fetchShops(); // 组件创建时获取店铺数据\r\n  },\r\n  methods: {\r\n    fetchShops() {\r\n      this.request.get(\"/api/icon\").then((res) => {\r\n        if (res.code === \"200\") {\r\n          this.icons = res.data;\r\n        }\r\n      });\r\n      axios.get(\"/api/shops\").then((response) => {\r\n      const res = response; // response.data 才是后端返回的主体数据\r\n      if (res.status === 200) {\r\n        this.allShops = res.data; // 假设后端直接返回数据列表\r\n      }\r\n      console.log(res)\r\n});\r\n    },\r\n    sortShopsByFloor() {\r\n      this.firstFloorShops = [];\r\n      this.secondFloorShops = [];\r\n      this.allShops.forEach((shop) => {\r\n        if (shop.floor == 1) {\r\n          this.firstFloorShops.push(shop);\r\n        } else if (shop.floor == 2) {\r\n          this.secondFloorShops.push(shop);\r\n        }\r\n      });\r\n    }\r\n  },\r\n  mounted() {\r\n    const canvas = document.getElementById('Floor1');\r\n    const ctx = canvas.getContext('2d');\r\n    const infoBox = document.getElementById('infoBox');\r\n\r\n    this.treeImage.src = require('./Resources/tree.png');\r\n    this.treeImage.onerror = () => {\r\n      console.error('树的图片加载失败');\r\n    };\r\n\r\n    const rows = this.canvasHeight / this.gridSize;\r\n    const cols = this.canvasWidth / this.gridSize;\r\n\r\n    const drawGrid = () => {\r\n      ctx.strokeStyle = 'gray';\r\n      ctx.lineWidth = 1;\r\n    };\r\n\r\n    drawGrid();\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* 样式代码 */\r\n</style>"]},"metadata":{},"sourceType":"module"}