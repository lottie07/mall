{"ast":null,"code":"import _objectSpread from \"D:/Workspace/graduation_project/ElectronicMall/ElectronicMallVue/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _asyncToGenerator from \"D:/Workspace/graduation_project/ElectronicMall/ElectronicMallVue/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"regenerator-runtime/runtime.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { CanvasRenderer } from './canvasRenderer';\nimport API from '@/utils/request';\nexport default {\n  data: function data() {\n    return {\n      canvasWidth: 1300,\n      canvasHeight: 560,\n      gridSize: 20,\n      blockX: 0,\n      blockY: 0,\n      currentFloor: '一楼',\n      allShops: [],\n      firstFloorShops: [],\n      secondFloorShops: [],\n      firstFloorObstacles: [{\n        x: 3,\n        y: 11\n      }, {\n        x: 5,\n        y: 13\n      }],\n      secondFloorObstacles: [{\n        x: 4,\n        y: 5\n      }, {\n        x: 9,\n        y: 2\n      }],\n      pathStart: null,\n      pathEnd: null,\n      // UI状态\n      hoverInfo: '',\n      infoBoxVisible: false,\n      treeImage: new Image()\n    };\n  },\n  computed: {\n    currentFloorShops: function currentFloorShops() {\n      return this.currentFloor === '一楼' ? this.firstFloorShops : this.secondFloorShops;\n    },\n    currentFloorObstacles: function currentFloorObstacles() {\n      return this.currentFloor === '一楼' ? this.firstFloorObstacles : this.secondFloorObstacles;\n    },\n    infoBoxStyle: function infoBoxStyle() {\n      return {\n        display: this.infoBoxVisible ? 'block' : 'none',\n        left: this.mouseX + 'px',\n        top: this.mouseY + 'px'\n      };\n    }\n  },\n  created: function created() {\n    var _this = this;\n\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _this.fetchShops();\n\n            case 2:\n              _this.treeImage.src = require('./Resources/tree.png');\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  },\n  mounted: function mounted() {\n    this.renderer = new CanvasRenderer(this, 'floorCanvas');\n    this.renderer.init();\n    window.addEventListener('keydown', this.handleKeyPress);\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.renderer.destroy();\n    window.removeEventListener('keydown', this.handleKeyPress);\n  },\n  methods: {\n    fetchShops: function fetchShops() {\n      var _this2 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var _yield$API$get, data;\n\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.next = 3;\n                return API.get('/api/shops');\n\n              case 3:\n                _yield$API$get = _context2.sent;\n                data = _yield$API$get.data;\n                _this2.allShops = data;\n\n                _this2.sortShopsByFloor();\n\n                _context2.next = 12;\n                break;\n\n              case 9:\n                _context2.prev = 9;\n                _context2.t0 = _context2[\"catch\"](0);\n                console.error('数据加载失败:', _context2.t0);\n\n              case 12:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[0, 9]]);\n      }))();\n    },\n    sortShopsByFloor: function sortShopsByFloor() {\n      var _this3 = this;\n\n      this.firstFloorShops = this.allShops.filter(function (shop) {\n        return shop.floor == 1;\n      }).map(function (shop) {\n        return _objectSpread(_objectSpread({}, shop), {}, {\n          shape: _this3.getShopShape(shop)\n        });\n      });\n      this.secondFloorShops = this.allShops.filter(function (shop) {\n        return shop.floor == 2;\n      }).map(function (shop) {\n        return _objectSpread(_objectSpread({}, shop), {}, {\n          shape: _this3.getShopShape(shop)\n        });\n      });\n    },\n    getShopShape: function getShopShape(shop) {\n      if (shop.type == 'elevator') return 'elevator';\n      if (shop.width > 3) return 'rect';\n      return 'invertedHouse';\n    },\n    handleKeyPress: function handleKeyPress(e) {\n      var newPos = {\n        x: this.blockX,\n        y: this.blockY\n      };\n\n      switch (e.key) {\n        case 'ArrowUp':\n          newPos.y--;\n          break;\n\n        case 'ArrowDown':\n          newPos.y++;\n          break;\n\n        case 'ArrowLeft':\n          newPos.x--;\n          break;\n\n        case 'ArrowRight':\n          newPos.x++;\n          break;\n      }\n\n      if (this.isValidPosition(newPos)) {\n        this.blockX = newPos.x;\n        this.blockY = newPos.y;\n      }\n    },\n    isValidPosition: function isValidPosition(pos) {\n      return !this.currentFloorObstacles.some(function (o) {\n        return o.x === pos.x && o.y === pos.y;\n      });\n    },\n    handleMouseMove: function handleMouseMove(e) {\n      var rect = this.$el.getBoundingClientRect();\n      var gridX = Math.floor((e.clientX - rect.left) / this.gridSize);\n      var gridY = Math.floor((e.clientY - rect.top) / this.gridSize);\n      var shop = this.currentFloorShops.find(function (s) {\n        return gridX >= s.x && gridX < s.x + s.width && gridY >= s.y && gridY < s.y + s.height;\n      });\n      this.infoBoxVisible = !!shop;\n      this.hoverInfo = (shop === null || shop === void 0 ? void 0 : shop.info) || '';\n      this.mouseX = e.clientX;\n      this.mouseY = e.clientY;\n    },\n    handleClick: function handleClick() {\n      if (this.hoverInfo) {\n        alert(this.hoverInfo);\n      }\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAkBA;AACA;AAEA;AACAA,MADA,kBACA;AACA;AACAC,uBADA;AAEAC,uBAFA;AAGAC,kBAHA;AAKAC,eALA;AAMAC,eANA;AAOAC,wBAPA;AASAC,kBATA;AAUAC,yBAVA;AAWAC,0BAXA;AAYAC,4BACA;AAAAC;AAAAC;AAAA,OADA,EAEA;AAAAD;AAAAC;AAAA,OAFA,CAZA;AAgBAC,6BACA;AAAAF;AAAAC;AAAA,OADA,EAEA;AAAAD;AAAAC;AAAA,OAFA,CAhBA;AAoBAE,qBApBA;AAqBAC,mBArBA;AAuBA;AACAC,mBAxBA;AAyBAC,2BAzBA;AA0BAC;AA1BA;AA4BA,GA9BA;AAgCAC;AACAC,qBADA,+BACA;AACA,0CACA,oBADA,GAEA,qBAFA;AAGA,KALA;AAMAC,yBANA,mCAMA;AACA,0CACA,wBADA,GAEA,yBAFA;AAGA,KAVA;AAWAC,gBAXA,0BAWA;AACA;AACAC,uDADA;AAEAC,gCAFA;AAGAC;AAHA;AAKA;AAjBA,GAhCA;AAoDAC,SApDA,qBAoDA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACA,kBADA;;AAAA;AAEA;;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA,GAvDA;AAyDAC,SAzDA,qBAyDA;AACA;AACA;AACAC;AACA,GA7DA;AA+DAC,eA/DA,2BA+DA;AACA;AACAD;AACA,GAlEA;AAoEAE;AACAC,cADA,wBACA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEAC,qBAFA;;AAAA;AAAA;AAEAhC,oBAFA,kBAEAA,IAFA;AAGA;;AACA;;AAJA;AAAA;;AAAA;AAAA;AAAA;AAMAiC;;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA,KATA;AAWAC,oBAXA,8BAWA;AAAA;;AACA,2CACAC,MADA,CACA;AAAA;AAAA,OADA,EAEAC,GAFA,CAEA;AAAA,+CACAC,IADA;AAEAC;AAFA;AAAA,OAFA;AAOA,4CACAH,MADA,CACA;AAAA;AAAA,OADA,EAEAC,GAFA,CAEA;AAAA,+CACAC,IADA;AAEAC;AAFA;AAAA,OAFA;AAMA,KAzBA;AA2BAC,gBA3BA,wBA2BAF,IA3BA,EA2BA;AACA;AACA;AACA;AACA,KA/BA;AAiCAG,kBAjCA,0BAiCAC,CAjCA,EAiCA;AACA;AAAA9B;AAAAC;AAAA;;AACA;AACA;AAAA8B;AAAA;;AACA;AAAAA;AAAA;;AACA;AAAAA;AAAA;;AACA;AAAAA;AAAA;AAJA;;AAOA;AACA;AACA;AACA;AACA,KA9CA;AAgDAC,mBAhDA,2BAgDAC,GAhDA,EAgDA;AACA,8CACA;AAAA;AAAA,OADA;AAGA,KApDA;AAsDAC,mBAtDA,2BAsDAJ,CAtDA,EAsDA;AACA;AACA;AACA;AAEA;AAAA,eACAK,gBACAA,qBADA,IAEAC,YAFA,IAGAA,sBAJA;AAAA;AAOA;AACA;AACA;AACA;AACA,KAtEA;AAwEAC,eAxEA,yBAwEA;AACA;AACAC;AACA;AACA;AA5EA;AApEA","names":["data","canvasWidth","canvasHeight","gridSize","blockX","blockY","currentFloor","allShops","firstFloorShops","secondFloorShops","firstFloorObstacles","x","y","secondFloorObstacles","pathStart","pathEnd","hoverInfo","infoBoxVisible","treeImage","computed","currentFloorShops","currentFloorObstacles","infoBoxStyle","display","left","top","created","mounted","window","beforeDestroy","methods","fetchShops","API","console","sortShopsByFloor","filter","map","shop","shape","getShopShape","handleKeyPress","e","newPos","isValidPosition","pos","handleMouseMove","gridX","gridY","handleClick","alert"],"sourceRoot":"src/views/front/mall","sources":["Tour.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"floor-info\">当前楼层: {{ currentFloor }}</div>\r\n    <canvas \r\n      id=\"floorCanvas\"\r\n      :width=\"canvasWidth\"\r\n      :height=\"canvasHeight\"\r\n      @mousemove=\"handleMouseMove\"\r\n      @click=\"handleClick\"\r\n    ></canvas>\r\n    <div \r\n      id=\"infoBox\"\r\n      :style=\"infoBoxStyle\"\r\n    >{{ hoverInfo }}</div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { CanvasRenderer } from './canvasRenderer';\r\nimport API from '@/utils/request';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      canvasWidth: 1300,\r\n      canvasHeight: 560,\r\n      gridSize: 20,\r\n      \r\n      blockX: 0,\r\n      blockY: 0,\r\n      currentFloor: '一楼',\r\n      \r\n      allShops: [],\r\n      firstFloorShops: [],\r\n      secondFloorShops: [],\r\n      firstFloorObstacles: [\r\n        { x: 3, y: 11 },\r\n        { x: 5, y: 13 }\r\n      ],\r\n      secondFloorObstacles: [\r\n        { x: 4, y: 5 },\r\n        { x: 9, y: 2 }\r\n      ],\r\n      pathStart: null,\r\n      pathEnd: null,\r\n      \r\n      // UI状态\r\n      hoverInfo: '',\r\n      infoBoxVisible: false,\r\n      treeImage: new Image()\r\n    };\r\n  },\r\n\r\n  computed: {\r\n    currentFloorShops() {\r\n      return this.currentFloor === '一楼' \r\n        ? this.firstFloorShops \r\n        : this.secondFloorShops;\r\n    },\r\n    currentFloorObstacles() {\r\n      return this.currentFloor === '一楼'\r\n        ? this.firstFloorObstacles\r\n        : this.secondFloorObstacles;\r\n    },\r\n    infoBoxStyle() {\r\n      return {\r\n        display: this.infoBoxVisible ? 'block' : 'none',\r\n        left: this.mouseX + 'px',\r\n        top: this.mouseY + 'px',\r\n      };\r\n    }\r\n  },\r\n\r\n  async created() {\r\n    await this.fetchShops();\r\n    this.treeImage.src = require('./Resources/tree.png');\r\n  },\r\n\r\n  mounted() {\r\n    this.renderer = new CanvasRenderer(this, 'floorCanvas');\r\n    this.renderer.init();\r\n    window.addEventListener('keydown', this.handleKeyPress);\r\n  },\r\n\r\n  beforeDestroy() {\r\n    this.renderer.destroy();\r\n    window.removeEventListener('keydown', this.handleKeyPress);\r\n  },\r\n\r\n  methods: {\r\n    async fetchShops() {\r\n      try {\r\n        const { data } = await API.get('/api/shops');\r\n        this.allShops = data;\r\n        this.sortShopsByFloor();\r\n      } catch (error) {\r\n        console.error('数据加载失败:', error);\r\n      }\r\n    },\r\n\r\n    sortShopsByFloor() {\r\n      this.firstFloorShops = this.allShops\r\n        .filter(shop => shop.floor == 1)\r\n        .map(shop => ({\r\n          ...shop,\r\n          shape: this.getShopShape(shop)\r\n        }));\r\n      \r\n      this.secondFloorShops = this.allShops\r\n        .filter(shop => shop.floor == 2)\r\n        .map(shop => ({\r\n          ...shop,\r\n          shape: this.getShopShape(shop)\r\n        }));\r\n    },\r\n\r\n    getShopShape(shop) {\r\n      if (shop.type == 'elevator') return 'elevator';\r\n      if (shop.width > 3) return 'rect';\r\n      return 'invertedHouse';\r\n    },\r\n\r\n    handleKeyPress(e) {\r\n      const newPos = { x: this.blockX, y: this.blockY };\r\n      switch(e.key) {\r\n        case 'ArrowUp': newPos.y--; break;\r\n        case 'ArrowDown': newPos.y++; break;\r\n        case 'ArrowLeft': newPos.x--; break;\r\n        case 'ArrowRight': newPos.x++; break;\r\n      }\r\n\r\n      if (this.isValidPosition(newPos)) {\r\n        this.blockX = newPos.x;\r\n        this.blockY = newPos.y;\r\n      }\r\n    },\r\n\r\n    isValidPosition(pos) {\r\n      return !this.currentFloorObstacles.some(\r\n        o => o.x === pos.x && o.y === pos.y\r\n      );\r\n    },\r\n\r\n    handleMouseMove(e) {\r\n      const rect = this.$el.getBoundingClientRect();\r\n      const gridX = Math.floor((e.clientX - rect.left) / this.gridSize);\r\n      const gridY = Math.floor((e.clientY - rect.top) / this.gridSize);\r\n\r\n      const shop = this.currentFloorShops.find(s =>\r\n        gridX >= s.x &&\r\n        gridX < s.x + s.width &&\r\n        gridY >= s.y &&\r\n        gridY < s.y + s.height\r\n      );\r\n\r\n      this.infoBoxVisible = !!shop;\r\n      this.hoverInfo = shop?.info || '';\r\n      this.mouseX = e.clientX;\r\n      this.mouseY = e.clientY;\r\n    },\r\n\r\n    handleClick() {\r\n      if (this.hoverInfo) {\r\n        alert(this.hoverInfo);\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.floor-info {\r\n  text-align: center;\r\n  font-size: 18px;\r\n  margin: 10px 0;\r\n}\r\n\r\ncanvas {\r\n  border: 1px solid #ccc;\r\n  background: #fff;\r\n}\r\n\r\n#infoBox {\r\n  position: fixed;\r\n  background: rgba(255,255,255,0.9);\r\n  border: 1px solid #333;\r\n  padding: 8px;\r\n  pointer-events: none;\r\n  box-shadow: 2px 2px 5px rgba(0,0,0,0.2);\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}