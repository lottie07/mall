{"ast":null,"code":"import _toConsumableArray from \"D:/Workspace/graduation_project/ElectronicMall/ElectronicMallVue/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.string.starts-with.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/web.url.js\";\nimport \"core-js/modules/web.url-search-params.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport API from '@/utils/request';\nexport default {\n  props: {\n    visible: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data: function data() {\n    return {\n      imageUrl: '',\n      shops: [],\n      activeShop: '0',\n      draggingShop: 0,\n      draggingIndex: -1,\n      containerRect: null,\n      colors: ['#409EFF', '#67C23A', '#E6A23C', '#F56C6C', '#909399']\n    };\n  },\n  computed: {\n    currentShop: function currentShop() {\n      return this.shops[parseInt(this.activeShop)] || {};\n    }\n  },\n  watch: {\n    currentShop: {\n      handler: function handler(newVal) {\n        if (!newVal.points) return;\n        var points = newVal.points;\n        if (points.length < 1) return;\n        newVal.shopX = Math.min.apply(Math, _toConsumableArray(points.map(function (p) {\n          return p.x;\n        })));\n        newVal.shopY = Math.min.apply(Math, _toConsumableArray(points.map(function (p) {\n          return p.y;\n        })));\n        newVal.shopWidth = Math.max.apply(Math, _toConsumableArray(points.map(function (p) {\n          return p.x;\n        }))) - newVal.shopX;\n        newVal.shopHeight = Math.max.apply(Math, _toConsumableArray(points.map(function (p) {\n          return p.y;\n        }))) - newVal.shopY;\n      },\n      deep: true\n    }\n  },\n  methods: {\n    confirmShops: function confirmShops() {\n      var _this = this;\n\n      var shopsToSend = this.shops.map(function (shop) {\n        return {\n          floor: String(shop.shopFloor || ''),\n          shopName: shop.shopName || '',\n          x: Number(shop.shopX) || 0,\n          y: Number(shop.shopY) || 0,\n          width: Math.max(0, Number(shop.shopWidth)) || 0,\n          height: Math.max(0, Number(shop.shopHeight)) || 0,\n          shape: 'rect'\n        };\n      });\n      var loading = this.$loading({\n        lock: true,\n        text: '保存中...',\n        spinner: 'el-icon-loading'\n      });\n      this.request.post('/api/shops', shopsToSend).then(function (response) {\n        loading.close();\n\n        if (response.code == 200) {\n          _this.$message.success(response.msg || '保存成功');\n\n          _this.handleClose();\n\n          _this.$emit('shops-saved');\n\n          console.log(\"保存成功\");\n        } else {\n          _this.$message.error(response.msg || '保存失败');\n        }\n      }).catch(function (error) {\n        loading.close();\n        console.error('请求失败:', error);\n        var errorMsg = '请求失败';\n\n        if (error.response) {\n          errorMsg = \"\\u670D\\u52A1\\u5668\\u9519\\u8BEF: \".concat(error.response.status);\n        } else if (error.request) {\n          errorMsg = '网络连接失败';\n        }\n\n        _this.$message.error(errorMsg);\n      });\n    },\n    handleClose: function handleClose() {\n      this.$emit('update:visible', false);\n      this.imageUrl = '';\n      this.shops = [];\n    },\n    addNewShop: function addNewShop() {\n      var _this$shops$;\n\n      var basePoints = ((_this$shops$ = this.shops[0]) === null || _this$shops$ === void 0 ? void 0 : _this$shops$.points) || [];\n      var newShop = {\n        points: JSON.parse(JSON.stringify(basePoints)),\n        shopX: 0,\n        shopY: 0,\n        shopWidth: 0,\n        shopHeight: 0,\n        shopName: '',\n        shopFloor: 1\n      };\n      this.shops.push(newShop);\n      this.activeShop = (this.shops.length - 1).toString();\n    },\n    getShopPolygon: function getShopPolygon(index) {\n      return this.shops[index].points.map(function (p) {\n        return \"\".concat(p.x, \",\").concat(p.y);\n      }).join(' ');\n    },\n    hexToRgb: function hexToRgb(hex) {\n      var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n      return result ? \"\".concat(parseInt(result[1], 16), \", \").concat(parseInt(result[2], 16), \", \").concat(parseInt(result[3], 16)) : '64, 158, 255';\n    },\n    startDrag: function startDrag(shopIndex, pointIndex, e) {\n      this.draggingShop = shopIndex;\n      this.draggingIndex = pointIndex;\n      e.preventDefault();\n    },\n    handleDrag: function handleDrag(e) {\n      if (this.draggingIndex === -1) return;\n      var container = this.$refs.imageContainer;\n      var rect = container.getBoundingClientRect();\n      var x = e.clientX - rect.left;\n      var y = e.clientY - rect.top;\n      this.shops[this.draggingShop].points.splice(this.draggingIndex, 1, {\n        x: Math.max(0, Math.min(x, container.clientWidth)),\n        y: Math.max(0, Math.min(y, container.clientHeight))\n      });\n      this.updateShopDataFromPoints(this.draggingShop);\n    },\n    stopDrag: function stopDrag() {\n      this.draggingIndex = -1;\n    },\n    handleImageUpload: function handleImageUpload(file) {\n      var isImage = file.raw.type.startsWith('image/');\n      var isLt5M = file.raw.size / 1024 / 1024 < 5;\n\n      if (!isImage) {\n        this.$message.error('只能上传图片文件!');\n        return false;\n      }\n\n      if (!isLt5M) {\n        this.$message.error('图片大小不能超过5MB!');\n        return false;\n      }\n\n      this.imageUrl = URL.createObjectURL(file.raw);\n      return false;\n    },\n    initFirstShop: function initFirstShop() {\n      var img = this.$refs.image;\n      this.containerRect = this.$refs.imageContainer.getBoundingClientRect(); // 初始化第一个店铺\n\n      var initialPoints = [{\n        x: 10,\n        y: 10\n      }, {\n        x: img.width - 10,\n        y: 10\n      }, {\n        x: img.width - 10,\n        y: img.height - 10\n      }, {\n        x: 10,\n        y: img.height - 10\n      }];\n      this.shops = [{\n        points: initialPoints,\n        shopX: 10,\n        shopY: 10,\n        shopWidth: img.width - 20,\n        shopHeight: img.height - 20,\n        shopName: '',\n        shopFloor: 1\n      }];\n    },\n    updateShopDataFromPoints: function updateShopDataFromPoints(shopIndex) {\n      var shop = this.shops[shopIndex];\n      var points = shop.points;\n      if (points.length < 1) return;\n      shop.shopX = Math.min.apply(Math, _toConsumableArray(points.map(function (p) {\n        return p.x;\n      })));\n      shop.shopY = Math.min.apply(Math, _toConsumableArray(points.map(function (p) {\n        return p.y;\n      })));\n      shop.shopWidth = Math.max.apply(Math, _toConsumableArray(points.map(function (p) {\n        return p.x;\n      }))) - shop.shopX;\n      shop.shopHeight = Math.max.apply(Math, _toConsumableArray(points.map(function (p) {\n        return p.y;\n      }))) - shop.shopY;\n    },\n    updatePointsFromShopData: function updatePointsFromShopData(shopIndex) {\n      var shop = this.shops[shopIndex];\n      var points = shop.points;\n      if (points.length < 1) return;\n      points[0].x = shop.shopX;\n      points[0].y = shop.shopY;\n      points[1].x = shop.shopX + shop.shopWidth;\n      points[1].y = shop.shopY;\n      points[2].x = shop.shopX + shop.shopWidth;\n      points[2].y = shop.shopY + shop.shopHeight;\n      points[3].x = shop.shopX;\n      points[3].y = shop.shopY + shop.shopHeight;\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["props","visible","type","default","data","imageUrl","shops","activeShop","draggingShop","draggingIndex","containerRect","colors","computed","currentShop","watch","handler","newVal","deep","methods","confirmShops","floor","shopName","x","y","width","height","shape","lock","text","spinner","then","loading","console","catch","errorMsg","handleClose","addNewShop","points","shopX","shopY","shopWidth","shopHeight","shopFloor","getShopPolygon","index","hexToRgb","hex","parseInt","startDrag","shopIndex","pointIndex","e","handleDrag","stopDrag","handleImageUpload","file","initFirstShop","updateShopDataFromPoints","shop","updatePointsFromShopData"],"sourceRoot":"src/views/front/mall","sources":["MapImportDialog.vue"],"sourcesContent":["<template>\r\n    <el-dialog\r\n        title=\"导入\"\r\n        :visible.sync=\"visible\"\r\n        width=\"80%\"\r\n        @close=\"handleClose\"\r\n    >\r\n        <el-upload\r\n            class=\"upload-demo\"\r\n            action=\"#\"\r\n            :show-file-list=\"false\"\r\n            :auto-upload=\"false\"\r\n            :on-change=\"handleImageUpload\"\r\n            accept=\"image/*\"\r\n        >\r\n            <el-button size=\"small\" type=\"primary\">点击上传</el-button>\r\n            <div slot=\"tip\" class=\"el-upload__tip\">\r\n                支持JPG/PNG格式图片，最大5MB\r\n            </div>\r\n        </el-upload>\r\n        <div class=\"editor-container\" v-if=\"imageUrl\">\r\n            <div\r\n                class=\"image-container\"\r\n                ref=\"imageContainer\"\r\n                @mousemove=\"handleDrag\"\r\n                @mouseup=\"stopDrag\"\r\n                @mouseleave=\"stopDrag\"\r\n            >\r\n                <img\r\n                    :src=\"imageUrl\"\r\n                    alt=\"上传的图片\"\r\n                    ref=\"image\"\r\n                    @load=\"initFirstShop\"\r\n                >\r\n                <!-- 遍历所有店铺 -->\r\n                <div\r\n                    v-for=\"(shop, shopIndex) in shops\"\r\n                    :key=\"'shop-' + shopIndex\"\r\n                    class=\"shop-container\"\r\n                >\r\n                    <!-- 控制点 -->\r\n                    <div\r\n                        v-for=\"(point, pointIndex) in shop.points\"\r\n                        :key=\"'point-' + shopIndex + '-' + pointIndex\"\r\n                        class=\"control-point\"\r\n                        :style=\"{\r\n                            left: point.x + 'px',\r\n                            top: point.y + 'px',\r\n                            backgroundColor: colors[shopIndex % colors.length]\r\n                        }\"\r\n                        @mousedown=\"startDrag(shopIndex, pointIndex, $event)\"\r\n                    ></div>\r\n                    <!-- 多边形 -->\r\n                    <svg class=\"polygon\" v-if=\"shop.points.length > 1\">\r\n                        <polygon\r\n                            :points=\"getShopPolygon(shopIndex)\"\r\n                            :fill=\"`rgba(${hexToRgb(colors[shopIndex % colors.length])}, 0.3)`\"\r\n                            :stroke=\"colors[shopIndex % colors.length]\"\r\n                        />\r\n                    </svg>\r\n                </div>\r\n            </div>\r\n            <div class=\"property-sidebar\">\r\n                <div class=\"tabs-container\">\r\n                    <el-tabs v-model=\"activeShop\" type=\"card\">\r\n                        <el-tab-pane\r\n                            v-for=\"(shop, index) in shops\"\r\n                            :key=\"index\"\r\n                            :label=\"'店铺' + (index + 1)\"\r\n                            :name=\"index.toString()\"\r\n                        >\r\n                            <el-form label-position=\"top\">\r\n                                <el-form-item :label=\"'店铺' + (index + 1) + 'X坐标'\">\r\n                                    <el-input v-model.number=\"shop.shopX\" @input=\"updatePointsFromShopData(index)\"></el-input>\r\n                                </el-form-item>\r\n                                <el-form-item :label=\"'店铺' + (index + 1) + 'Y坐标'\">\r\n                                    <el-input v-model.number=\"shop.shopY\" @input=\"updatePointsFromShopData(index)\"></el-input>\r\n                                </el-form-item>\r\n                                <el-form-item :label=\"'店铺' + (index + 1) + '长度'\">\r\n                                    <el-input v-model.number=\"shop.shopWidth\" @input=\"updatePointsFromShopData(index)\"></el-input>\r\n                                </el-form-item>\r\n                                <el-form-item :label=\"'店铺' + (index + 1) + '宽度'\">\r\n                                    <el-input v-model.number=\"shop.shopHeight\" @input=\"updatePointsFromShopData(index)\"></el-input>\r\n                                </el-form-item>\r\n                                <el-form-item :label=\"'店铺' + (index + 1) + '名称'\">\r\n                                    <el-input v-model=\"shop.shopName\"></el-input>\r\n                                </el-form-item>\r\n                                <el-form-item :label=\"'店铺' + (index + 1) + '楼层'\">\r\n                                    <el-input v-model=\"shop.shopFloor\"></el-input>\r\n                                </el-form-item>\r\n                            </el-form>\r\n                        </el-tab-pane>\r\n                    </el-tabs>\r\n                </div>\r\n                <div class=\"button-group\">\r\n                    <el-button type=\"primary\" @click=\"addNewShop\">添加</el-button>\r\n                    <el-button type=\"success\" class=\"confirm-btn\" @click=\"confirmShops\">确认导入</el-button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </el-dialog>\r\n</template>\r\n\r\n<script>\r\nimport API from '@/utils/request';\r\nexport default {\r\n    props: {\r\n        visible: {\r\n            type: Boolean,\r\n            default: false\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            imageUrl: '',\r\n            shops: [],\r\n            activeShop: '0',\r\n            draggingShop: 0,\r\n            draggingIndex: -1,\r\n            containerRect: null,\r\n            colors: ['#409EFF', '#67C23A', '#E6A23C', '#F56C6C', '#909399']\r\n        }\r\n    },\r\n    computed: {\r\n        currentShop() {\r\n            return this.shops[parseInt(this.activeShop)] || {}\r\n        }\r\n    },\r\n    watch: {\r\n        currentShop: {\r\n            handler(newVal) {\r\n                if (!newVal.points) return;\r\n                const points = newVal.points;\r\n                if (points.length < 1) return;\r\n\r\n                newVal.shopX = Math.min(...points.map(p => p.x));\r\n                newVal.shopY = Math.min(...points.map(p => p.y));\r\n                newVal.shopWidth = Math.max(...points.map(p => p.x)) - newVal.shopX;\r\n                newVal.shopHeight = Math.max(...points.map(p => p.y)) - newVal.shopY;\r\n            },\r\n            deep: true\r\n        }\r\n    },\r\n    methods: {\r\n        confirmShops() {\r\n        const shopsToSend = this.shops.map(shop => ({\r\n            floor: String(shop.shopFloor || ''), \r\n            shopName: shop.shopName || '',\r\n            x: Number(shop.shopX) || 0,\r\n            y: Number(shop.shopY) || 0,\r\n            width: Math.max(0, Number(shop.shopWidth)) || 0,\r\n            height: Math.max(0, Number(shop.shopHeight)) || 0,\r\n            shape: 'rect'\r\n        }));\r\n\r\n        const loading = this.$loading({\r\n            lock: true,\r\n            text: '保存中...',\r\n            spinner: 'el-icon-loading'\r\n        });\r\n\r\n        this.request.post('/api/shops', shopsToSend)\r\n            .then(response => {\r\n            loading.close();\r\n            if (response.code == 200) { \r\n                this.$message.success(response.msg || '保存成功');\r\n                this.handleClose();\r\n                this.$emit('shops-saved'); \r\n                console.log(\"保存成功\")\r\n            } else {\r\n                this.$message.error(response.msg || '保存失败');\r\n            }\r\n            })\r\n            .catch(error => {\r\n            loading.close();\r\n            console.error('请求失败:', error);\r\n            \r\n            let errorMsg = '请求失败';\r\n            if (error.response) {\r\n                errorMsg = `服务器错误: ${error.response.status}`;\r\n            } else if (error.request) {\r\n                errorMsg = '网络连接失败';\r\n            }\r\n            \r\n            this.$message.error(errorMsg);\r\n            });\r\n        },\r\n        handleClose() {\r\n            this.$emit('update:visible', false);\r\n            this.imageUrl = '';\r\n            this.shops = [];\r\n        },\r\n\r\n        addNewShop() {\r\n            const basePoints = this.shops[0]?.points || [];\r\n            const newShop = {\r\n                points: JSON.parse(JSON.stringify(basePoints)),\r\n                shopX: 0,\r\n                shopY: 0,\r\n                shopWidth: 0,\r\n                shopHeight: 0,\r\n                shopName: '',\r\n                shopFloor: 1\r\n            };\r\n            this.shops.push(newShop);\r\n            this.activeShop = (this.shops.length - 1).toString();\r\n        },\r\n\r\n        getShopPolygon(index) {\r\n            return this.shops[index].points.map(p => `${p.x},${p.y}`).join(' ');\r\n        },\r\n\r\n        hexToRgb(hex) {\r\n            const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n            return result\r\n              ? `${parseInt(result[1], 16)}, ${parseInt(result[2], 16)}, ${parseInt(result[3], 16)}`\r\n                : '64, 158, 255';\r\n        },\r\n\r\n        startDrag(shopIndex, pointIndex, e) {\r\n            this.draggingShop = shopIndex;\r\n            this.draggingIndex = pointIndex;\r\n            e.preventDefault();\r\n        },\r\n\r\n        handleDrag(e) {\r\n            if (this.draggingIndex === -1) return;\r\n\r\n            const container = this.$refs.imageContainer;\r\n            const rect = container.getBoundingClientRect();\r\n            const x = e.clientX - rect.left;\r\n            const y = e.clientY - rect.top;\r\n\r\n            this.shops[this.draggingShop].points.splice(this.draggingIndex, 1, {\r\n                x: Math.max(0, Math.min(x, container.clientWidth)),\r\n                y: Math.max(0, Math.min(y, container.clientHeight))\r\n            });\r\n            this.updateShopDataFromPoints(this.draggingShop);\r\n        },\r\n\r\n        stopDrag() {\r\n            this.draggingIndex = -1;\r\n        },\r\n\r\n        handleImageUpload(file) {\r\n            const isImage = file.raw.type.startsWith('image/');\r\n            const isLt5M = file.raw.size / 1024 / 1024 < 5;\r\n\r\n            if (!isImage) {\r\n                this.$message.error('只能上传图片文件!');\r\n                return false;\r\n            }\r\n            if (!isLt5M) {\r\n                this.$message.error('图片大小不能超过5MB!');\r\n                return false;\r\n            }\r\n\r\n            this.imageUrl = URL.createObjectURL(file.raw);\r\n            return false;\r\n        },\r\n\r\n        initFirstShop() {\r\n            const img = this.$refs.image;\r\n            this.containerRect = this.$refs.imageContainer.getBoundingClientRect();\r\n\r\n            // 初始化第一个店铺\r\n            const initialPoints = [\r\n                { x: 10, y: 10 },\r\n                { x: img.width - 10, y: 10 },\r\n                { x: img.width - 10, y: img.height - 10 },\r\n                { x: 10, y: img.height - 10 }\r\n            ];\r\n\r\n            this.shops = [{\r\n                points: initialPoints,\r\n                shopX: 10,\r\n                shopY: 10,\r\n                shopWidth: img.width - 20,\r\n                shopHeight: img.height - 20,\r\n                shopName: '',\r\n                shopFloor: 1\r\n            }];\r\n        },\r\n        updateShopDataFromPoints(shopIndex) {\r\n            const shop = this.shops[shopIndex];\r\n            const points = shop.points;\r\n            if (points.length < 1) return;\r\n\r\n            shop.shopX = Math.min(...points.map(p => p.x));\r\n            shop.shopY = Math.min(...points.map(p => p.y));\r\n            shop.shopWidth = Math.max(...points.map(p => p.x)) - shop.shopX;\r\n            shop.shopHeight = Math.max(...points.map(p => p.y)) - shop.shopY;\r\n        },\r\n        updatePointsFromShopData(shopIndex) {\r\n            const shop = this.shops[shopIndex];\r\n            const points = shop.points;\r\n            if (points.length < 1) return;\r\n\r\n            points[0].x = shop.shopX;\r\n            points[0].y = shop.shopY;\r\n            points[1].x = shop.shopX + shop.shopWidth;\r\n            points[1].y = shop.shopY;\r\n            points[2].x = shop.shopX + shop.shopWidth;\r\n            points[2].y = shop.shopY + shop.shopHeight;\r\n            points[3].x = shop.shopX;\r\n            points[3].y = shop.shopY + shop.shopHeight;\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.editor-container {\r\n    display: flex;\r\n    gap: 20px;\r\n    margin-top: 20px;\r\n    height: 80vh;\r\n    align-items: stretch;\r\n}\r\n\r\n.image-container {\r\n    flex: 1;\r\n    border: 1px dashed #ddd;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    overflow: hidden;\r\n    position: relative;\r\n    margin: 0;\r\n    height: 100%;\r\n}\r\n\r\n.property-sidebar {\r\n    width: 300px;\r\n    height: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    border-left: 1px solid #ebeef5;\r\n}\r\n\r\n.tabs-container {\r\n    flex: 1;\r\n    overflow-y: auto;\r\n}\r\n\r\n.control-point {\r\n    position: absolute;\r\n    width: 12px;\r\n    height: 12px;\r\n    border: 2px solid white;\r\n    border-radius: 50%;\r\n    cursor: move;\r\n    transform: translate(-50%, -50%);\r\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\r\n    z-index: 2;\r\n}\r\n\r\n.polygon {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    z-index: 1;\r\n}\r\n\r\n.button-group {\r\n    display: flex;\r\n    gap: 10px;\r\n    padding: 20px 0;\r\n    background: white;\r\n    border-top: 1px solid #ebeef5;\r\n    margin-top: auto; \r\n}\r\n\r\n.confirm-btn {\r\n    flex-shrink: 0;\r\n}\r\n</style>    "]},"metadata":{},"sourceType":"module"}